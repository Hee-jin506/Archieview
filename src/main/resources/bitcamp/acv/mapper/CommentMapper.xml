<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bitcamp.acv.dao.CommentDao">
  
  <resultMap type="comment" id="CommentMap">
    <id column="cno"           property="no"/>
    <result column="rvno"    property="reviewNo"/>
    <result column="gno"    property="groupNo"/>
    <result column="lvl"    property="level"/>
    <result column="mno"    property="memberNo"/>
    <result column="content"    property="content"/>
    <result column="rdt"    property="registeredDate"/>
    <result column="stat"    property="status"/>
    <result column="mdt"    property="modifiedDate"/>
    
    <association property="member" javaType="member">
      <id column="mno" property="no"/>
      <result column="nick" property="nickName"/>
      <result column="photo" property="photo"/>
    </association>
      
    <association property="review" javaType="review">
      <id column="rvno" property="no"/>
      <result column="txt"      property="text"/>
      <result column="stcno"      property="stillCut"/>
    </association>
    

  </resultMap>
  
  <!--
  private int no; // 댓글 번호
  private int reviewNo; // 영화 후기 번호
  private int level; // 댓글 단계
  private int memberNo; // 댓글단 회원
  private String content; // 내용
  private Date registeredDate; // 등록일
  private int status; // 상태
  private Date modifiedDate; // 수정일
  private int groupNo; // 그룹 번호
  -->
  
  <sql id="sql1">
    select 
    c.cno,
    c.rvno,
    c.gno,
    c.lvl,
    c.mno,
    c.content,
    c.rdt,
    c.stat,
    c.mdt,
    r.rvno,
    r.txt,
    r.stcno,
    mb.nick,
    mb.photo
  </sql>
       
  <insert id="insert" parameterType="comment">
    insert into acv_cmt(rvno, gno, lvl, mno, content) 
    <if test="content != ''">
      values(#{reviewNo}, #{groupNo}, #{level}, #{memberNo}, #{content})
    </if>
  </insert>
  
  <select id="findAll" resultMap="CommentMap" parameterType="string">
  <include refid="sql1" />
    from
    acv_cmt c
      inner join acv_rv r on r.rvno = c.rvno
      inner join acv_mbr mb on mb.mno = c.mno
  <if test="keyword != null">
    where
      mb.nick like concat('%', #{keyword}, '%')
  </if>
    order by r.rvno asc, c.gno desc, c.lvl asc, c.cno desc;
  </select>
  
  <select id="findByReviewNo" resultMap="CommentMap" parameterType="int">
    <include refid="sql1"/>
      from 
      acv_cmt c
      inner join acv_rv r on r.rvno = c.rvno
      inner join acv_mbr mb on mb.mno = c.mno
    where r.rvno=#{reviewNo}
    order by r.rvno asc, c.gno desc, c.lvl asc, c.cno desc;
  </select>
  
    <select id="findByMemberNo" resultMap="CommentMap" parameterType="int">
    <include refid="sql1"/>
      from 
      acv_cmt c
      inner join acv_rv r on r.rvno = c.rvno
      inner join acv_mbr mb on mb.mno = c.mno
    where
      c.mno=#{mno}
      and c.stat = 1
    order by r.rvno asc, c.gno desc, c.lvl asc, c.cno desc;
  </select>
  
  <select id="findByNo" resultMap="CommentMap" parameterType="int">
    <include refid="sql1"/>
      from 
      acv_cmt c
      left outer join acv_rv r on r.rvno = c.rvno
      left outer join acv_mbr mb on mb.mno = c.mno
    where
      c.cno=#{cno}
  </select>
  
   <update id="update" parameterType="comment">
    update acv_cmt
    <set>
      <if test="content != ''">
      content = #{content},
      </if>
      mdt = now()
    </set>
      where 
      cno=#{no} 
  </update>
  
    <update id="delete" parameterType="int">
    update acv_cmt
    set
      stat = 0,
      mdt=now()
    where cno=#{no} 
  </update>
  
  <update id="active" parameterType="int">
    update acv_cmt
    set
      stat = 1,
      mdt=now()
    where cno=#{no} 
  </update>
  
</mapper>

<!-- 

  <update id="inactive" parameterType="int">
    update acv_cmt
    set
      stat = 0,
      mdt=now()
    where cno=#{no} 
  </update>


  
  select
  mv.mvno,
  mv.title,
  r.stcno,
  r.rvno,
  r.txt,
  c.cno,
  c.content,
  c.mno,
  m.nick,
  m.photo
  from
  acv_cmt c,
  acv_rv r,
  acv_mbr m,
  acv_stc s,
  acv_mov mv
  where
  c.rvno = r.rvno
  and r.stcno = s.stcno
  and c.mno = m.mno
  and s.mvno = mv.mvno
  order by r.rvno, c.odr, c.lvl asc;
  
  
  
 -->



