<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bitcamp.acv.dao.MovieDao">
  
  <resultMap type="movie" id="MovieMap">
    <id column="mvno"           property="no"/>
    <result column="title"          property="title"/>
    <result column="dir"            property="directors"/>
    <result column="eng_title"      property="englishTitle"/>
    <result column="runtime"        property="runtime"/>
    <result column="odt"            property="openDate"/>
    <result column="actors"         property="actors"/>
    <result column="syn"            property="synopsis"/>
    <result column="nation"         property="nation"/>
    <result column="stat"           property="status"/>
    <result column="rdt"            property="registeredDate"/>
    <result column="nav_cd"         property="naverCd"/>
    
    <collection property="stillcuts" ofType="string">
      <result column="stc_url"          property="url"/>
    </collection>
    
    <collection property="posters" ofType="string">
      <result column="ps_url"          property="url"/>
    </collection>
    
    <collection property="genres" ofType="string">
      <result column="g_title"          property="genres"/>
    </collection>
    
     <collection property="reviews" ofType="int">
      <result column="rvno"          property="no"/>
    </collection>
    
  </resultMap>
  
  <!--  
   <resultMap type="movie" id="MovieMap2">
     <id column="mvno"           property="no"/>
     <result column="title"          property="title"/>
     <result column="count(*)"          property="review"/>
  </resultMap> 
  -->
  <!-- 여러 SQL 문에서 중복되는 코드가 있다면, 
       다음과 같이 별도로 분리한다. -->
  <sql id="sql1">
    select 
	    m.mvno,
	    m.title,
	    m.dir,
	    m.eng_title,
	    m.runtime,
	    m.odt,
	    m.actors,
	    m.syn,
	    m.nation,
	    m.stat,
	    m.rdt,
	    m.nav_cd,
	    p.ps_url,
	    s.stcno,
	    s.stc_url,
	    g.title g_title,
      r.rvno
    from 
      acv_mov m
      left outer join acv_pstr p on p.mvno=m.mvno
      left outer join acv_stc s on s.mvno=m.mvno
      left outer join acv_gnr_mov gm on gm.mvno=m.mvno
      left outer join acv_gnr g on g.gno=gm.gno
      left outer join acv_rv r on s.stcno=r.stcno
  </sql>
  
  <select id="findByKeyword" resultMap="MovieMap" parameterType="hashmap">
    <include refid="sql1" />
    <where>
      <if test="no == null and title == null">
        (m.mvno like concat('%', #{keyword}, '%') or m.title like concat('%', #{keyword}, '%'))
      </if>
      <if test="no != null and title != null">
        (m.mvno like concat('%', #{keyword}, '%') or m.title like concat('%', #{keyword}, '%'))
      </if>
      <if test="no != null and title == null">
        m.mvno like concat('%', #{keyword}, '%')
      </if>
      <if test="no == null and title != null">
        m.title like concat('%', #{keyword}, '%')
      </if>
     </where>
     order by m.mvno desc
  </select>
  
  <!-- title에 keyword 포함된애들 리턴 -->
  <select id="findByKeywordTitle" resultMap="MovieMap" parameterType="string">
    <include refid="sql1"/>
    <bind name="pattern" value="'%' + _parameter + '%'" />
    where 
      m.title like #{pattern}
    order by m.mvno desc
  </select>
  
  <select id="findAll" resultMap="MovieMap" parameterType="string">
    <include refid="sql1"/>
    <if test="keyword != null">
    <bind name="pattern" value="'%' + _parameter + '%'" />
    where 
      m.title like #{pattern}
    </if>
    order by m.mvno desc
  </select>

 <!--  <select id="findByPop" resultMap="MovieMap2">
    select
      mvno,
      title,
      count(*)
    from
      (select
         stc.mvno,
         mov.title,
         stc.stcno,
         rv.rvno
       from
         acv_stc stc
       inner join acv_rv rv on rv.stcno=stc.stcno
       inner join acv_mov mov on mov.mvno=stc.mvno)rvl
     group by mvno
  </select> -->
  
  <select id="findByNo" resultMap="MovieMap" parameterType="int">
    <include refid="sql1" />
    where
      m.mvno = #{no}
  </select>
  
  <update id="delete" parameterType="int">
  update acv_mov 
  set
    stat = 0
  where mvno = #{no}
  </update>
  
    <update id="active" parameterType="int">
  update acv_mov 
  set
    stat = 1
  where mvno = #{no}
  </update>
  
  <update id="update" parameterType="movie">
    update acv_mov
    <set>
      <if test="registeredDate != null">rdt = #{registeredDate},</if>
      <if test="title != null">title = #{title},</if>
      <if test="englishTitle != null">eng_title = #{englishTitle},</if>
      <if test="runtime != null">runtime = #{runtime},</if>
      <if test="directors != null">dir = #{directors},</if>
      <if test="nation != null">nation = #{nation},</if>
      <if test="openDate != null">odt = #{openDate},</if>
    </set>
    where mvno = #{no}
  </update>
  
  
  <select id="getStcNo" resultType="int" parameterType="map">
    select
      stcno
    from
      acv_stc
    where
      stc_url=#{url}
      and mvno=#{movieNo}
  </select>
</mapper>
